## Requirements for everything
# i3: i3-gaps-rounded-git (AUR)
# Lock Screen: i3lock-color
# App Launcher: rofi + rofi-calc + rofi-emoji
# Screenshots: scrot
# Terminal: kitty
# Wallpaper: nitrogen
# Status Bar: polybar
# compositor: picom (Tyrones Fork)
# Connected monitor names set in ~/.Xresources, see ./setup.sh

##########################################################
################ ~~~Global/Shortcuts~~~ ##################
##########################################################

## Global Mod ##
set $mod Mod4

## Set Global Font ##
font xtf: Hack Nerd Font:style=Italic:size=11

## Open terminal ##
bindsym $mod+Return exec --no-startup-id xrdb ~/.Xresources; exec --no-startup-id kitty

## Window kill command ##
bindsym $mod+Shift+q kill

## Window Xkill command ##
bindsym --release $mod+Shift+x exec xkill

## Rofi ##
# Start Rofi to open app menu
bindsym $mod+d exec --no-startup-id ~/.config/rofi/app_launcher/launcher.sh

# Start rofi to download audio from url
bindsym $mod+z exec --no-startup-id ~/.config/i3/scripts/audio-dl.sh

# Start rofi to locate files
bindsym $mod+m exec --no-startup-id ~/.config/rofi/scripts/locate.sh

# Start Rofi to show emoji selector
bindsym $mod+x exec --no-startup-id ~/.config/rofi/scripts/emoji.sh

# Start rofi for calculator
bindsym $mod+c exec --no-startup-id ~/.config/rofi/scripts/calculator.sh

# Start rofi for bitwarden
bindsym --release $mod+s exec --no-startup-id ~/.config/rofi/scripts/bitwarden.sh

## Take Screenshot ##
bindsym --release $mod+p exec --no-startup-id ~/.config/i3/scripts/screenshot.sh

## Setup monitors  ##
bindsym $mod+Shift+n exec --no-startup-id ~/.config/i3/setup.sh

## Set screen names for workspaces assignment ##
set_from_resource $screen_hdmi hdmi
set_from_resource $screen_edp edp
set_from_resource $screen_dp dp

##########################################################
################# ~~~Focus/Windows~~~ ####################
##########################################################

## Change focus ##
# Vim-like bindings
bindsym $mod+j focus up
bindsym $mod+k focus down
bindsym $mod+l focus right
bindsym $mod+h focus left

# Arrow key bindings
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

## Move focused window ##
# Vim-like bindings
# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right

# Arrow key bindings
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

## Split ##

# Split horizontally
bindsym $mod+Shift+h split h;exec notify-send 'tile horizontally'
# Split vertically
bindsym $mod+Shift+v split v;exec notify-send 'tile vertically'
# Split toggle
#bindsym $mod+q split toggle

## Toggle fullscreen mode for the focused container ##
bindsym $mod+f fullscreen toggle

## Change container layout (stacked, tabbed, toggle split) ##
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

## Toggle sticky ##
bindsym $mod+Shift+s sticky toggle

## Focus the parent container ##
#bindsym $mod+a focus parent

## Move the currently focused window to the scratchpad ##
bindsym $mod+Shift+slash move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+slash scratchpad show


##########################################################
################### ~~~Workspaces~~~ #####################
##########################################################

## Setup workspaces ##
set $ws1 1:main
set $ws2 2:seconday
set $ws3 3:tertiary
set $ws4 4:comm
set $ws5 5:mail
set $ws6 6:games
set $ws7 7:media
set $ws8 8:other
set $ws9 9:moar
set $ws10 10:dp
set $ws11 11:dp2
set $ws0 0:hdmi

## Assign workspaces to outputs ##
workspace $ws1 output $screen_edp
workspace $ws2 output $screen_edp
workspace $ws3 output $screen_edp
workspace $ws4 output $screen_edp
workspace $ws5 output $screen_edp
workspace $ws6 output $screen_edp
workspace $ws7 output $screen_edp
workspace $ws8 output $screen_edp
workspace $ws9 output $screen_edp
workspace $ws10 output $screen_dp
workspace $ws11 output $screen_dp
workspace $ws0 output $screen_hdmi

## Workspaces key bindings ##
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym $mod+minus workspace $ws11
bindsym $mod+grave workspace $ws0

## Move focused container to workspace ##
# bindsym $mod+Ctrl+1 move container to workspace $ws1
# bindsym $mod+Ctrl+2 move container to workspace $ws2
# bindsym $mod+Ctrl+3 move container to workspace $ws3
# bindsym $mod+Ctrl+4 move container to workspace $ws4
# bindsym $mod+Ctrl+5 move container to workspace $ws5
# bindsym $mod+Ctrl+6 move container to workspace $ws6
# bindsym $mod+Ctrl+7 move container to workspace $ws7
# bindsym $mod+Ctrl+8 move container to workspace $ws8
# bindsym $mod+Ctrl+9 move container to workspace $ws9
# bindsym $mod+Ctrl+10 move container to workspace $ws10
# bindsym $mod+Ctrl+grave move container to workspace $ws0

## Move to workspace with focused container ##
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10; workspace $ws10
bindsym $mod+Shift+minus move container to workspace $ws11; workspace $ws11
bindsym $mod+Shift+grave move container to workspace $ws0; workspace $ws0

## Switch to workspace with urgent window automatically ##
for_window [urgent=latest] focus

## Workspace back and forth (with/without active container) ##
workspace_auto_back_and_forth yes
#bindsym $mod+b workspace back_and_forth
#bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# Navigate workspaces next / previous
bindsym $mod+Mod1+Right workspace next
bindsym $mod+Mod1+Left workspace prev

## Move Windows to certain workspaces ##
# Loaded seperately

##########################################################
#################### ~~~Floating~~~ ######################
##########################################################

## Floating window manipulation modifier ##
floating_modifier $mod

### Toggle tiling / floating ##
bindsym $mod+Shift+space floating toggle

## Change focus between tiling / floating windows ##
bindsym $mod+space focus mode_toggle

## Open specific applications in floating mode ##
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Pamac-manager"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal

##########################################################
##################### ~~~System~~~ #######################
##########################################################

## Window focus depends on mouse position ##
focus_follows_mouse yes

## Reload the configuration file ##
bindsym $mod+Shift+c reload

## Restart i3 inplace (preserves your layout/session, can be used to upgrade i3) ##
bindsym $mod+Shift+r restart

## Exit i3 (logs you out of your X session) ##
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

## Lock screen ##
#bindsym $mod+Shift+l exec ~/.config/i3/scripts/lock.sh
bindsym $mod+Shift+l exec dm-tool switch-to-greeter

## Setup workspace layouts ##
# Workspace 10 terminals
bindsym $mod+i exec "i3-msg 'workspace 10:dp; append_layout ~/.config/i3/workspace_layouts/workspace.json'"; \
  exec --no-startup-id sleep 1; \
   exec --no-startup-id kitty --name "htop-container" -e htop; \
    exec --no-startup-id kitty --name "ping-container" -e ping 1.1.1.1; \
     exec --no-startup-id kitty --name "cmus-container" -e cmus; \
      exec --no-startup-id kitty --name "nethogs-container" -e sudo nethogs; \
       exec --no-startup-id kitty --name "nethogs-total-container" -e sudo nethogs -v 3; \
        exec --no-startup-id kitty --name "watch-container" -e watch -n 1 progress

# Set shut down, restart and locking features
#bindsym $mod+0 mode "$mode_system"
#set $mode_system (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
#mode "$mode_system" {
#    bindsym l exec --no-startup-id lock, mode "default"
#    bindsym s exec --no-startup-id systemctl suspend, mode "default"
#    bindsym e exec --no-startup-id i3-msg exit, mode "default"
#    bindsym h exec --no-startup-id lock && systemctl hibernate, mode "default"
#    bindsym r exec --no-startup-id systemctl reboot, mode "default"
#    bindsym Shift+s exec --no-startup-id systemctl poweroff, mode "default"
#
#    # exit system mode: "Enter" or "Escape"
#    bindsym Return mode "default"
#    bindsym Escape mode "default"
#}

##########################################################
#################### ~~~Resizing~~~ ######################
##########################################################

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode
  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym h resize grow width 5 px or 5 ppt
  bindsym j resize shrink width 5 px or 5 ppt
  bindsym k resize grow height 5 px or 5 ppt
  bindsym l resize shrink height 5 px or 5 ppt
  #bindsym semicolon resize grow width 5 px or 5 ppt

  # same bindings, but for the arrow keys and larger resize steps
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # exit resize mode: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

##########################################################
################### ~~~Autostarts~~~ #####################
##########################################################

## Blueman
exec --no-startup-id pkill blueman; sleep 1; blueman-applet; blueman-tray

## Network-Manager applet
exec --no-startup-id pkill nm-applet; sleep 1; nm-applet

## Dunst notifications
exec --no-startup-id dunst

## Kde-Connect
exec --no-startup-id kdeconnect-indicator

## Gnome polkit authentication
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &

## Touchpad tapping default enabled
exec --no-startup-id xinput -set-prop $(xinput | \
  grep "TouchPad" | awk '{print $6}' | tr -d 'id=') $(xinput list-props $(xinput | \
    grep "TouchPad" | awk '{print $6}' | tr -d 'id=') | grep "Tapping Enabled" | awk '{print $4}' | \
      head -n1 | tr -d '():') 1

## Launch polybar
exec_always --no-startup-id ~/.config/polybar/launch.sh

## Start/Restart picom
exec_always --no-startup-id pkill picom; sleep 1; picom --experimental-backends -b

## Set Wallpaper
exec_always --no-startup-id nitrogen --head=0 --set-scaled ~/.config/i3/wall; sleep 1
exec_always --no-startup-id nitrogen --head=1 --set-scaled ~/.config/i3/wall; sleep 1
exec_always --no-startup-id nitrogen --head=2 --set-scaled ~/.config/i3/wall; sleep 1


##########################################################
##################### ~~~Styles~~~ #######################
##########################################################

##### Borders #####
hide_edge_borders both

## Rounded Corners ##
border_radius 10

## Disable title bar ##
# new_window pixel
# new_float normal
#for_window [class="^.*"] border pixel 10
for_window [class="^.*"] border pixel 0
for_window [class="kitty"] border pixel 10
for_window [class="firefox"] border pixel 5

## Disable system stats windows borders
#for_window [instance="htop-container"] border pixel 0
#for_window [instance="watch-container"] border pixel 0
#for_window [instance="cmus-container"] border pixel 0
#for_window [instance="nethogs-container"] border pixel 0
#for_window [instance="ping-container"] border pixel 0

## Border shortcut keys ##
#bindsym $mod+u border none
#bindsym $mod+y border pixel 2
#bindsym $mod+n border normal

## Border Theme ##
# <colorclass> <border> <background> <text> <indicator> <child_border>
#client.focused #ac25ea #ac25ea #ac25ea #ac25ea
#client.focused_inactive #181818 #181818 #2c2e2f
#client.unfocused #ea25c6 #ea25c6 #ea25c6 #ea25c6
#client.urgent #383a3b #00ccff #ee0000
#client.placeholder #bfbfbf #162025 #bfbfbf #75404b #75404b
client.background #162025
client.focused          #000000 #000000 #000000 #000000 #000000
client.focused_inactive #000000 #000000 #000000 #000000 #000000
client.unfocused        #000000 #000000 #000000 #000000 #000000
client.urgent           #2f343a #900000 #ffffff #900000 #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000 #0c0c0c

##### Gaps #####

## Smart Gaps ##
#smart_gaps on
#smart_borders on

## Global Gaps ##
gaps top 31
gaps inner 10

## Per-workspace Gaps ##

# Inner and Outer Gaps
#workspace $ws10 gaps inner 5
workspace $ws0 gaps inner 0
workspace $ws0 gaps outer 0


# Top and Bottom Gaps
#workspace $ws10 gaps top 0
#workspace $ws11 gaps top 0

# Left and Right Gaps
#workspace <ws> gaps right <px>
#workspace <ws> gaps left <px>

# Horizontal and Vertical Gaps
#workspace <ws> gaps horizontal <px>
#workspace <ws> gaps vertical <px>


##########################################################
#################### ~~~Gap Mode~~~ ######################
##########################################################

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace).
# If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
